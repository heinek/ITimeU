@model ITimeU.Models.TimerModel
@{
    ViewBag.Title = "Index";
}
<script src="@Url.Content("~/Scripts/jquery-1.4.4.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Stopwatch.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Tools.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/TimeFormatFactory.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        var btnDelete = $("#btnDelete");
        var btnIntermediate = $("#btnIntermediate");
        var btnUpHour = $("#btnUpHour");
        var btnUpMin = $("#btnUpMin");
        var btnUpSek = $("#btnUpSek");
        var btnUpMS = $("#btnUpMS");
        var btnDownHour = $("#btnDownHour");
        var btnDownMin = $("#btnDownMin");
        var btnDownSek = $("#btnDownSek");
        var btnDownMS = $("#btnDownMS");
        var btnChangeCP = $("#btnChangeCP");
        var btnStart = $("#btnStart");
        var btnEdit = $("#btnEdit");
        var ddlCheckpoints = $("#ddlCheckpoints");
        var lblTimer = $("#lblRunningTimer");
        var listIntermediate = $("#listIntermediate");
        var tbEditHour = $("#tbEditHour");
        var tbEditMin = $("#tbEditMin");
        var tbEditSek = $("#tbEditSek");
        var tbEditMSek = $("#tbEditMSek");
        var initialRuntimeId;
        var timer;
        var timeFormatFactory = new TimeFormatFactory();
        var startBtnText = "Start";
        var stopBtnText = "Stop";
        var restartBtnText = "Restart";

        timer = new Stopwatch(function (runtime) {
            var displayText = timeFormatFactory.MSSDFormat(runtime);
            lblTimer.html(displayText);
        });
        timer.doDisplay();

        btnStart.click(function () {
            timer.startStop();
            if (btnStart.val() == startBtnText || btnStart.val() == restartBtnText) {
                btnStart.val(stopBtnText);
                if (btnIntermediate) {
                    Tools.enable(btnIntermediate);
                }
                $.post("/Timer/Start/");
            }
            else {
                btnStart.val(restartBtnText);
                if (btnIntermediate) {
                    Tools.disable(btnIntermediate);
                }
                $.post("/Timer/Stop/");
            }
        });

        btnIntermediate.click(function () {
            timer.addIntermediate(function (runtime) {
                url = "/Timer/SaveRuntime/?runtime=" + runtime + "&checkpointid=" + ddlCheckpoints.val();
                $.get(url, function (data) {
                    listIntermediate.html(data);
                });
            });
        });

        btnEdit.click(function () {
            url = "/Timer/EditRuntime/?orginalruntimeid=" + initialRuntimeId + "&hour=" + tbEditHour.val() + "&min=" + tbEditMin.val() + "&sek=" + tbEditSek.val() + "&msek=" + tbEditMSek.val();
            $.get(url, function (data) {
                listIntermediate.html(data);
            });
            ResetEditFields();
        });

        btnUpHour.click(function () {
            var time = Tools.parse(tbEditHour.val(), 24, true);
            tbEditHour.val(time);
        });

        btnUpMin.click(function () {
            var time = Tools.parse(tbEditMin.val(), 60, true);
            tbEditMin.val(time);
        });

        btnUpSek.click(function () {
            var time = Tools.parse(tbEditSek.val(), 60, true);
            tbEditSek.val(time);
        });

        btnUpMS.click(function () {
            var time = Tools.parse(tbEditMSek.val(), 10, true);
            tbEditMSek.val(time);
        });

        btnDownHour.click(function () {
            var time = Tools.parse(tbEditHour.val(), 24, false);
            tbEditHour.val(time);
        });

        btnDownMin.click(function () {
            var time = Tools.parse(tbEditMin.val(), 60, false);
            tbEditMin.val(time);
        });

        btnDownSek.click(function () {
            var time = Tools.parse(tbEditSek.val(), 60, false);
            tbEditSek.val(time);
        });

        btnDownMS.click(function () {
            var time = Tools.parse(tbEditMSek.val(), 10, false);
            tbEditMSek.val(time);
        });

        btnDelete.click(function () {
            url = "/Timer/DeleteRuntime/?runtimeid=" + initialRuntimeId;
            $.get(url, function (data) {
                listIntermediate.html(data);
            });
            ResetEditFields();
            DisableControls();
        });

        listIntermediate.change(function () {
            var strh = "";
            var strm = "";
            var strs = "";
            var strms = "";
            var strid = "";
            $("#listIntermediate :selected").each(function () {
                strid = $(this).val();
                strh = $(this).text().substring(0, 1);
                strm = $(this).text().substring(2, 4);
                strs = $(this).text().substring(5, 7);
                strms = $(this).text().substring(8, 9);
            });
            initialRuntimeId = strid;
            tbEditHour.val(strh);
            tbEditMin.val(strm);
            tbEditSek.val(strs);
            tbEditMSek.val(strms);
            EnableControls();
        });

        btnChangeCP.click(function () {
            $.post("/Timer/ChangeCheckpoint/?checkpointid=" + ddlCheckpoints.val(), function (data) {
                listIntermediate.html(data);
            });
        });
    });

    function DisableControls() {
        $("#btnEdit").attr('disabled', 'disabled');
        $("#btnDelete").attr('disabled', 'disabled');
        $("#btnUpHour").attr('disabled', 'disabled');
        $("#btnUpMin").attr('disabled', 'disabled');
        $("#btnUpSek").attr('disabled', 'disabled');
        $("#btnUpMS").attr('disabled', 'disabled');
        $("#btnDownHour").attr('disabled', 'disabled');
        $("#btnDownMin").attr('disabled', 'disabled');
        $("#btnDownSek").attr('disabled', 'disabled');
        $("#btnDownMS").attr('disabled', 'disabled');
    }

    function EnableControls() {
        $("#btnEdit").removeAttr('disabled');
        $("#btnDelete").removeAttr('disabled');
        $("#btnUpHour").removeAttr('disabled');
        $("#btnUpMin").removeAttr('disabled');
        $("#btnUpSek").removeAttr('disabled');
        $("#btnUpMS").removeAttr('disabled');
        $("#btnDownHour").removeAttr('disabled');
        $("#btnDownMin").removeAttr('disabled');
        $("#btnDownSek").removeAttr('disabled');
        $("#btnDownMS").removeAttr('disabled');
    }

    function ResetEditFields() {
        $("#tbEditHour").val("");
        $("#tbEditMin").val("");
        $("#tbEditSek").val("");
        $("#tbEditMSek").val("");
    }



</script>
<div class="contentmargin">
    <div class="containter">
        <div class="row">
            <div class="left">
                <div class="editor-label" style="vertical-align: top">
                    <b>@Html.Label("lblCheckpoint", "Passeringspunkt:")</b></div>
            </div>
            <div class="row">
                <br />
                @Html.DropDownList("ddlCheckpoints", new SelectList(ViewBag.Checkpoints, "CheckpointID", "Name"))
                <input type="button" id="btnChangeCP" class="btnGo" value=" " />
            </div>
        </div>
        <div class="row">
            <div class="left">
                <span id="lblRunningTimer" class="timer"></span>
            </div>
            <div class="right">
                <input type="button" id="btnStart" value="Start" class="btnRegular" style="width: 100px" />
                <input type="button" id="btnIntermediate" value="Mellomtid" class="btnRegular" style="width: 100px" />
            </div>
        </div>
        <div class="row">
            <div class="left">
                @Html.ListBox("listIntermediate", new SelectList(Model.CheckpointRuntimes[Model.CurrentCheckpointId], "Key", "Value"), new { @class = "listbox" })
            </div>
            <div class="right">
                @Html.TextBox("tbEditHour", null, new { @class = "textboxsmall" })<input type="button"
                    id="btnUpHour" class="btnUp" value=" " /><input type="button" id="btnDownHour" class="btnDown"
                        value=" " /><span class="timer">:</span>@Html.TextBox("tbEditMin", null, new { @class = "textboxsmall" })<input
                            type="button" id="btnUpMin" class="btnUp" value=" " /><input type="button" id="btnDownMin"
                                class="btnDown" value=" " /><span class="timer">:</span>@Html.TextBox("tbEditSek", null, new { @class = "textboxsmall" })<input
                                    type="button" id="btnUpSek" class="btnUp" value=" " /><input type="button" id="btnDownSek"
                                        class="btnDown" value=" " /><span class="timer">.</span>@Html.TextBox("tbEditMSek", null, new { @class = "textboxxsmall" })<input
                                            type="button" id="btnUpMS" class="btnUp" value=" " /><input type="button" id="btnDownMS"
                                                class="btnDown" value=" " />
                <br />
                <input type="button" id="btnEdit" value="Endre" class="btnRegular" style="width: 100px"
                    disabled="disabled" />
                <input type="button" id="btnDelete" value="Slett" class="btnRegular" style="width: 100px"
                    disabled="disabled" />
            </div>
        </div>
    </div>
</div>
